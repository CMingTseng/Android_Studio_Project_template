
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
group = rootProject.ext.FCMpomUtilsGroupId
version = rootProject.ext.FCMversionName
def pomArtifactId = rootProject.ext.FCMpomUtilsArtifactId

tasks.withType(Javadoc).all { enabled = false }

task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    options.charSet = 'UTF-8'
    failOnError false
}

if (project.hasProperty("android")) {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        baseName = pomArtifactId
        from android.sourceSets.main.java.srcDirs
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        baseName = pomArtifactId
        from javadoc.destinationDir
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    tasks.withType(JavaCompile) { //Here is pure java
        options.encoding = 'UTF-8'
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }
    developers {
        developer {
            id 'lzyzsd'
            name 'hi大头鬼hi'
            email 'bruceinpeking@gmail.com'
        }
    }
    scm {
        connection rootProject.ext.scmConnectionUrl
        developerConnection rootProject.ext.scmConnectionUrl
        url rootProject.ext.scmUrl
    }
}

Properties properties = new Properties()
if ( project.rootProject.file('local.properties').exists()){
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}else {
    properties.load(project.rootProject.file('../local.properties').newDataInputStream())
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = rootProject.ext.mainrepo
        name = pomArtifactId
        websiteUrl = rootProject.ext.scmUrl
        vcsUrl = rootProject.ext.scmConnectionUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        version {
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            groupId this.group
            artifactId pomArtifactId
            version this.version
            packaging 'aar'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
        }
    }
}
